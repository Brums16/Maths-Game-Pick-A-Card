{"ast":null,"code":"var _jsxFileName = \"/home/chrisb/Coding/Personal Projects/Maths-Games/number-maze/src/Main.js\";\nimport './Style.css';\nimport React, { useState, useRef, useEffect } from \"react\";\nimport heart from './gameheart.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  const createRandomArray = () => {\n    let orderedArray = [];\n    for (let i = 1; i <= 100; i++) {\n      orderedArray.push(i);\n    }\n    console.log(orderedArray);\n    let randomArray = [];\n    while (orderedArray.length > 0) {\n      let n = Math.floor(Math.random() * orderedArray.length);\n      randomArray.push(orderedArray.splice(n, 1));\n    }\n    randomArray = randomArray.flat();\n    console.log(randomArray);\n    return randomArray.map(number => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: createRandomArray()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useRef","useEffect","heart","jsxDEV","_jsxDEV","Main","createRandomArray","orderedArray","i","push","console","log","randomArray","length","n","Math","floor","random","splice","flat","map","number","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/chrisb/Coding/Personal Projects/Maths-Games/number-maze/src/Main.js"],"sourcesContent":["import './Style.css';\nimport React, { useState, useRef, useEffect } from \"react\";\nimport heart from './gameheart.png'\n\n\n\n\n\n\n\nconst Main = () => {\n\n    const createRandomArray = () => {\n        let orderedArray = []\n        for (let i = 1;i <=100; i++){\n            orderedArray.push(i)\n        }\n        console.log(orderedArray)\n        let randomArray = []\n        while (orderedArray.length > 0){\n            let n = Math.floor(Math.random()*orderedArray.length)\n            randomArray.push(orderedArray.splice(n, 1))\n        }\n        randomArray = randomArray.flat()\n        console.log(randomArray)\n        return randomArray.map((number => (\n            <div>{number}</div>\n        ))\n\n        )\n    }\n\n\n\n\n\n    return (\n        <div className=\"main\">\n            <div className=\"grid\">\n                {createRandomArray()}\n            </div>\n            \n            \n        </div>\n    )\n}\n\nexport default Main"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQnC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAEf,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIC,YAAY,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAACA,CAAC,IAAG,GAAG,EAAEA,CAAC,EAAE,EAAC;MACxBD,YAAY,CAACE,IAAI,CAACD,CAAC,CAAC;IACxB;IACAE,OAAO,CAACC,GAAG,CAACJ,YAAY,CAAC;IACzB,IAAIK,WAAW,GAAG,EAAE;IACpB,OAAOL,YAAY,CAACM,MAAM,GAAG,CAAC,EAAC;MAC3B,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAACV,YAAY,CAACM,MAAM,CAAC;MACrDD,WAAW,CAACH,IAAI,CAACF,YAAY,CAACW,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C;IACAF,WAAW,GAAGA,WAAW,CAACO,IAAI,CAAC,CAAC;IAChCT,OAAO,CAACC,GAAG,CAACC,WAAW,CAAC;IACxB,OAAOA,WAAW,CAACQ,GAAG,CAAEC,MAAM,iBAC1BjB,OAAA;MAAAkB,QAAA,EAAMD;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAGtB,CAAC;EACL,CAAC;EAMD,oBACItB,OAAA;IAAKuB,SAAS,EAAC,MAAM;IAAAL,QAAA,eACjBlB,OAAA;MAAKuB,SAAS,EAAC,MAAM;MAAAL,QAAA,EAChBhB,iBAAiB,CAAC;IAAC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAEd,CAAC;AAAAE,EAAA,GAnCKvB,IAAI;AAqCV,eAAeA,IAAI;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}