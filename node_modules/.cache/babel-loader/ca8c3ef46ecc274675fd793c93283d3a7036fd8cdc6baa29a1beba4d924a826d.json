{"ast":null,"code":"var _jsxFileName = \"/home/chrisb/Coding/Personal Projects/Maths-Games/Pick-a-Card/src/Main.js\",\n  _s = $RefreshSig$();\nimport './Style.css';\nimport React, { useState, useRef, useEffect } from \"react\";\nimport heart from './gameheart.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [time, setTime] = useState(60);\n  const intervalRef = useRef(null);\n  const [lives, setLives] = useState(3);\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [randomArray, setRandomArray] = useState([]);\n  const [condition, setCondition] = useState(x);\n  useEffect(() => {\n    createRandomArray();\n  }, []);\n  const createRandomArray = () => {\n    let orderedArray = [];\n    for (let i = 1; i <= 100; i++) {\n      orderedArray.push(i);\n    }\n    console.log(orderedArray);\n    let randomArray = [];\n    while (orderedArray.length > 0) {\n      let n = Math.floor(Math.random() * orderedArray.length);\n      randomArray.push(orderedArray.splice(n, 1));\n    }\n    setRandomArray(randomArray.flat());\n    console.log(randomArray);\n  };\n  const newGame = () => {\n    setGameStarted(true);\n    setTime(60);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n    }\n    setLives(3);\n    setScore(0);\n    setIsGameOver(false);\n    setCondition(x > 20);\n    intervalRef.current = setInterval(reduceTime, 1000);\n  };\n  const reduceTime = () => {\n    setTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n  };\n  const newGameButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newGame,\n        id: \"newgame\",\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  };\n  const livesDisplay = () => {\n    const heartIcons = Array.from({\n      length: lives\n    }, (_, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: heart,\n      className: \"heartIcon\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this));\n    return heartIcons;\n  };\n  const timerBar = () => {\n    const timerBarWidth = time / 60 * 100 + \"%\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"outerbox\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"innerbox\",\n        style: {\n          width: timerBarWidth,\n          backgroundColor: time > 30 ? \"green\" : time > 10 ? \"#DAA520\" : \"red\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  };\n  useEffect(() => {\n    if (lives === 0 || time === 0) {\n      setIsGameOver(true);\n      clearInterval(intervalRef.current);\n    }\n  }, [lives, time]);\n  const handleClick = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [gameStarted === false && newGameButton(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"condition\",\n      children: \"Condition goes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: randomArray.map(number => /*#__PURE__*/_jsxDEV(\"button\", {\n        value: number,\n        onClick: handleClick,\n        className: \"grid-square\",\n        children: number\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: time <= 5 ? \"red\" : \"\"\n      },\n      children: [\"Time remaining: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timerContainer\",\n      children: timerBar()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"livesContainer\",\n      children: livesDisplay()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"ConMN+XnqUa63bHeVEz+prkFdks=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useRef","useEffect","heart","jsxDEV","_jsxDEV","Main","_s","time","setTime","intervalRef","lives","setLives","score","setScore","highScore","setHighScore","isGameOver","setIsGameOver","gameStarted","setGameStarted","randomArray","setRandomArray","condition","setCondition","x","createRandomArray","orderedArray","i","push","console","log","length","n","Math","floor","random","splice","flat","newGame","current","clearInterval","setInterval","reduceTime","prevTime","newGameButton","children","onClick","id","fileName","_jsxFileName","lineNumber","columnNumber","livesDisplay","heartIcons","Array","from","_","index","src","className","timerBar","timerBarWidth","style","width","backgroundColor","handleClick","map","number","value","color","_c","$RefreshReg$"],"sources":["/home/chrisb/Coding/Personal Projects/Maths-Games/Pick-a-Card/src/Main.js"],"sourcesContent":["import './Style.css';\nimport React, { useState, useRef, useEffect } from \"react\";\nimport heart from './gameheart.png'\n\n\n\n\n\n\n\nconst Main = () => {\n\n\n\n\n\n\n\n    const [time, setTime] = useState(60)\n    const intervalRef = useRef(null)\n    const [lives, setLives] = useState(3)\n    const [score, setScore] = useState(0)\n    const [highScore, setHighScore] = useState(0)\n    const [isGameOver, setIsGameOver] = useState(false)\n    const [gameStarted, setGameStarted] = useState(false)\n    const [randomArray, setRandomArray] = useState([])\n    const [condition, setCondition] = useState(x)\n\n    useEffect(() => {\n        createRandomArray();\n      }, []);\n\n    const createRandomArray = () => {\n        let orderedArray = []\n        for (let i = 1;i <=100; i++){\n            orderedArray.push(i)\n        }\n        console.log(orderedArray)\n        let randomArray = []\n        while (orderedArray.length > 0){\n            let n = Math.floor(Math.random()*orderedArray.length)\n            randomArray.push(orderedArray.splice(n, 1))\n        }\n        setRandomArray(randomArray.flat())\n        console.log(randomArray)\n       \n    }\n\n\n    const newGame = () =>{\n        setGameStarted(true)\n        setTime(60)\n        if (intervalRef.current){\n            clearInterval(intervalRef.current)\n        }\n        setLives(3)\n        setScore(0)\n        setIsGameOver(false)\n        setCondition(x > 20)\n        intervalRef.current = setInterval(reduceTime,1000)\n        \n    }\n\n    const reduceTime = () => {\n        setTime((prevTime) => (prevTime > 0 ? prevTime-1 : 0))\n    }\n    \n    const newGameButton = () => {\n        return(\n            <div><button onClick={newGame} id=\"newgame\">New Game</button></div>\n        )\n    }\n\n    const livesDisplay = () => {\n\n        const heartIcons = Array.from({ length: lives }, (_, index) => (\n            <img src={heart} key={index} className=\"heartIcon\" />\n        ));\n        return heartIcons;\n        };\n\n\n    const timerBar = () => \n\n    {\n        const timerBarWidth = (time / 60 * 100) + \"%\"\n            return(\n            <div className=\"outerbox\">\n                <div className=\"innerbox\" style={{width: timerBarWidth, backgroundColor: time > 30 ? \"green\" : time > 10 ? \"#DAA520\" : \"red\"}}>\n                \n                </div>\n            </div>\n        )\n    }\n\n    useEffect(() =>{\n        if (lives === 0||time === 0){\n            setIsGameOver(true)\n            clearInterval(intervalRef.current)\n        }\n        }, [lives, time])   \n\n    const handleClick = () => {\n\n    }\n\n\n\n\n    return (\n        <div className=\"main\">\n            {gameStarted===false && newGameButton()}\n            <div className = \"condition\">\n                Condition goes here\n            </div>\n            <div className=\"grid\">\n            {randomArray.map((number) => (\n          <button key={number} value={number} onClick={handleClick} className=\"grid-square\">\n            {number}\n          </button>\n        ))}\n            </div>\n            <h3 style = {{\n                color: time <= 5 ? \"red\" : \"\"\n            }}>Time remaining: {time}</h3>\n            <div className=\"timerContainer\">{timerBar()}</div>\n            <div className=\"livesContainer\">\n            {livesDisplay()}\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Main"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}